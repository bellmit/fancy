<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd  
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd  
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd  
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.1.xsd  
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd  
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd  
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- 加载属性文件 -->
	<context:property-placeholder ignore-unresolvable="true"  location="classpath:fancy.properties" />
		<!-- 权限管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<!-- 缓存管理器 -->
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>
	
	<!-- Session管理配置 org.apache.shiro.web.session.mgt.DefaultWebSessionManager -->
	<bean id="sessionManager" class="cn.telling.common.security.shiro.session.SessionManager">
		<!-- 超时时间 -->
	    <property name="globalSessionTimeout" value="3600000"/>
	    <property name="sessionDAO" ref="shiroSessionDao"/>
	    <property name="sessionIdCookie" ref="sessionIdCookie"/>
	    <!-- 定时检查失效的session -->
	     <property name="sessionValidationSchedulerEnabled" value="true" />
	     <!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>

	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="SHAREJSESSIONID"/>
	</bean>

	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="fancy.session.id"/>
	</bean>
	
	
	<!-- <bean id="shiroSessionDao"  class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" /> -->

	<!-- 自定义Session存储容器 -->
<!-- 	<bean id="shiroSessionDao" class="com.thinkgem.jeesite.common.security.shiro.session.JedisSessionDAO"> -->
<!-- 		<property name="sessionIdGenerator" ref="idGen" /> -->
<!-- 		<property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_" /> -->
<!-- 	</bean> -->
	<bean id="shiroSessionDao" class="cn.telling.common.security.shiro.session.CacheSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<property name="activeSessionsCacheName" value="activeSessionsCache" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>
	
	<!-- 定义授权缓存管理器 -->
	<!-- 	<bean id="shiroCacheManager" class="com.thinkgem.jeesite.common.security.shiro.cache.SessionCacheManager" /> -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>

	<!-- session 集群 -->
	<!-- 
	<bean id="shiroCacheManager" class="org.springrain.frame.shiro.ShiroRedisCacheManager" > 
		<property name="cached" ref="redisCached" />
	</bean>
	 -->

	 <bean id="kickoutSessionControlFilter"   class="cn.telling.shirocontroller.KickoutSessionControlFilter">  
	    <property name="cacheManager" ref="shiroCacheManager"/>  
	    <property name="sessionManager" ref="sessionManager"/>  <!-- 用于根据会话ID，获取会话进行踢出操作的； -->
	  
	    <property name="kickoutAfter" value="false"/>  <!-- 是 踢出后来登录的，默认是false；即后者登录的用户踢出前者登录的用户； -->
	    <property name="maxSession" value="3"/>  <!-- 同一个用户最大的会话数，默认1；比如2的意思是同一个用户允许最多同时两个人登录； -->
	    <property name="kickoutUrl" value="/getout.html?kickout=1"/>  <!-- 被踢出后重定向到的地址； -->
	</bean>   


	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"
		depends-on="frameperms">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="${adminPath}/?login" />
		<property name="unauthorizedUrl" value="/noAuth" />
		<property name="filterChainDefinitions">
			<value>
			   /js/** = anon
			   /css/** = anon
			   /img/** = anon
			   /json/** = user
			   /plug/** = anon
			   /images/** = anon
			   /ui/** =anon
			   /validate.html=anon
			   /login=authc
			   /favicon.ico = anon
			   /taglib_includes.jsp= anon
			   /common/common.jsp= anon
			   /error/** = authc
			   /viewAllContacts.html = authc,kickout	<!-- 系统后台主页-->
			   /viewLeftMenuJson.html=user	<!-- 系统左侧菜单查询 -->
			   /lxrsysmsg.html=authc		<!-- 系统提示  -->
			   /monitoring=authc		<!-- 系统监控  -->
			   /competencesys.html= user	<!--  无权限页面-->
			   /main.html= user			<!--  系统后台右侧首页-->
			   /noAuth = anon
			   /getout.html = anon 	<!-- 重复登录踢出-->
			   /servlet/validateCodeServlet=anon
			   /user/list.html=user
			   /static/** = anon
				/userfiles/** = anon
				/cas = cas
				/login = authc
				/logout = logout
				/** = kickout,user,frameperms<!-- 访问所有进行验证和踢出验证 -->
			</value>
		</property>
		<!-- 声明自定义的过滤器 -->
		<property name="filters">
			<map>
				<entry key="cas" value-ref="casFilter"/>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
				<entry key="frameperms" value-ref="frameperms"></entry>
				<entry key="kickout" value-ref="kickoutSessionControlFilter"/>
			</map>
		</property>
	</bean>
	
	
		<!-- CAS认证过滤器 -->  
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">  
		<property name="failureUrl" value="/login"/>
	</bean>
	
	<!-- 起效权限注解,这个很少在web项目中用到,一般是控制url的访问,不是在controller中声明权限注解 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>