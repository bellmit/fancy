<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd  
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd  
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd  
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd  
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.1.xsd  
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd  
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
        
    <description>Spring Configuration</description>
	
	<import resource="classpath*:applicationContext-shiro.xml" />
	
	<!-- 启用基于注解（Annotation-based）的配置 -->
	<context:component-scan base-package="cn.telling" >
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
	</context:component-scan>
	
	<!--注册两个bean DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapte -->
	<mvc:annotation-driven />
	<!-- ====================================================================================== -->
	<!-- 启用Spring对@AspectJ切面配置的支持 <aop:aspectj-autoproxy /> -->
	<!-- ====================================================================================== -->
	<aop:aspectj-autoproxy />
	<!-- ====================================================================================== -->
	<!-- 加载属性文件 -->
	<!-- ====================================================================================== -->
	<context:property-placeholder location="classpath:*.properties" />

  	<!-- ====================================Memcacheed缓存客服端 ========================================= -->

	<bean id="memcachedPool" class="com.danga.MemCached.SockIOPool"
		factory-method="getInstance" init-method="initialize" destroy-method="shutDown">
		<constructor-arg>
			<value>neeaMemcachedPool</value>
		</constructor-arg>
		<property name="servers">
			<list>
			    <value>220.181.188.246:12000</value>
				<!-- <value>192.168.102.207:12000</value> 测试缓存服务器 -->
				<!-- <value>172.100.1.241:12000</value>正式缓存服务器 -->
				<!--多服务器 -->
				<!-- <value>172.100.1.241:12000</value> -->
				<!-- <value>172.100.1.242:12000</value> -->
				<!-- <value>172.100.1.243:12000</value> -->
				<!-- <value>172.100.1.245:12000</value> -->
			</list>
			
		</property>
		<!-- <property name="weights"> -->
		<!-- <list> -->
		<!-- <value>5</value> -->
		<!-- <value>5</value> -->
		<!-- <value>5</value> -->
		<!-- <value>5</value> -->
		<!-- </list> -->
		<!-- </property> -->
		<property name="initConn">
			<value>40</value>
		</property>
		<property name="minConn">
			<value>40</value>
		</property>
		<property name="maxConn">
			<value>200</value>
		</property>
		<property name="maintSleep">
			<value>5000</value>
		</property>
		<property name="nagle">
			<value>false</value>
		</property>
		<property name="socketTO">
			<value>3000</value>
		</property>
	</bean>
	<bean id="memcachedClient" class="com.danga.MemCached.MemCachedClient">
		<constructor-arg>
			<value>neeaMemcachedPool</value>
		</constructor-arg>
		<!-- <property name="compressEnable"> <value>true</value> </property> <property 
			name="compressThreshold"> <value>4096</value> </property> -->
	</bean>

	<import resource="classpath:net/bull/javamelody/monitoring-spring-aspectj.xml" />
	<!-- 性能监控 -->
	<bean id="facadeMonitoringAdvisor" class="net.bull.javamelody.MonitoringSpringAdvisor">
		<property name="pointcut">
			<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
				<property name="pattern" value="org.melody.*.*.service.*" /><!--正则表达式 -->
			</bean>
		</property>
	</bean>  


	<!-- ====================================Jedis start========================================= -->

<!-- 	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.pool.maxActive}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWait" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id="jedis-Template" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory" />
 -->

	<!-- ====================================Jedis start========================================= -->
<!-- 
	<bean id="cacheInit" class="com.tools.cache.CacheInit"></bean>
	 -->
	<bean id="cacheManaer" class="cn.telling.common.CacheManager" >
		<property name="memClient" ref="memcachedClient"/>  
	</bean>
	
  	<!-- aop -->
	<bean id="logService" class="cn.telling.web.LogService"></bean>

	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- <aop:config> <aop:aspect ref="logService"> </aop:aspect> </aop:config> -->

	<!-- 默认扫描 @Component @Repository @Service @Controller -->
	<context:annotation-config />
	
	
	<!--暂时注释了拦截器配置，因为有shiro 
		<mvc:interceptors>
			<bean class="cn.fancy.web.PurviewIntercept" />
		</mvc:interceptors> 
	-->
	
	<!--配置 数据源 连接池 c3p0   读写数据源 -->
	<bean id="b2b-ds-1" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="default">
		<property name="driverClass" value="${b2b-ds-1.driver}"></property>
		<property name="jdbcUrl" value="${b2b-ds-1.url}"></property>
		<property name="user" value="${b2b-ds-1.username}"></property>
		<property name="password" value="${b2b-ds-1.password}"></property>
		<property name="initialPoolSize" value="${b2b-ds-1.initialPoolSize}"></property>
		<property name="minPoolSize" value="${b2b-ds-1.minPoolSize}"></property>
		<property name="maxPoolSize" value="${b2b-ds-1.maxPoolSize}"></property>
		<property name="maxIdleTime" value="${b2b-ds-1.maxIdleTime}"></property>
		<property name="acquireIncrement" value="${b2b-ds-1.acquireIncrement}"></property>
		<property name="idleConnectionTestPeriod" value="${b2b-ds-1.idleConnectionTestPeriod}"></property>
		<property name="acquireRetryAttempts" value="${b2b-ds-1.acquireRetryAttempts}"></property>
		<property name="breakAfterAcquireFailure" value="${b2b-ds-1.breakAfterAcquireFailure}"></property>
		<property name="maxStatements" value="${b2b-ds-1.maxStatements}"></property>
		<property name="maxStatementsPerConnection" value="${b2b-ds-1.maxStatementsPerConnection}"></property>
		<property name="testConnectionOnCheckout" value="${b2b-ds-1.testConnectionOnCheckout}"></property>
		<property name="numHelperThreads" value="${b2b-ds-1.numHelperThreads}"></property>
	</bean>
	
	<bean id="mysql" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="default">
		<property name="driverClass" value="${mysql-fancy.driver}"></property>
		<property name="jdbcUrl" value="${mysql-fancy.url}"></property>
		<property name="user" value="${mysql-fancy.username}"></property>
		<property name="password" value="${mysql-fancy.password}"></property>
		<property name="initialPoolSize" value="${mysql-fancy.initialPoolSize}"></property>
		<property name="minPoolSize" value="${mysql-fancy.minPoolSize}"></property>
		<property name="maxPoolSize" value="${mysql-fancy.maxPoolSize}"></property>
		<property name="maxIdleTime" value="${mysql-fancy.maxIdleTime}"></property>
		<property name="acquireIncrement" value="${mysql-fancy.acquireIncrement}"></property>
		<property name="idleConnectionTestPeriod" value="${mysql-fancy.idleConnectionTestPeriod}"></property>
		<property name="acquireRetryAttempts" value="${mysql-fancy.acquireRetryAttempts}"></property>
		<property name="breakAfterAcquireFailure" value="${mysql-fancy.breakAfterAcquireFailure}"></property>
		<property name="maxStatements" value="${mysql-fancy.maxStatements}"></property>
		<property name="maxStatementsPerConnection" value="${mysql-fancy.maxStatementsPerConnection}"></property>
		<property name="testConnectionOnCheckout" value="${mysql-fancy.testConnectionOnCheckout}"></property>
		<property name="numHelperThreads" value="${mysql-fancy.numHelperThreads}"></property>
	</bean>
	
	<!-- 事务配置 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="b2b-ds-1" />
	</bean>
	
	<!-- Fancy 事务配置 -->
	<bean id="fancyTxManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysql" />
	</bean>
	
	<!-- SpringJDBC Template 配置 -->
	<!-- ====================================================================================== -->
    <bean id="film-template" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="b2b-ds-1" />
	</bean>

	<!-- Fancy Template 配置 -->
	<!-- ====================================================================================== -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="mysql" />
	</bean>
	
	<!-- Spring Oracle大字段处理类 配置 -->
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor"
		lazy-init="true" />
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor" />
	</bean>
	
		<!--====================================文件上传配置 ========================================= -->
	   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	   
		<!--设置上传文件大小的参数 ，单个文件不允许超过10M -->
        <property name="maxUploadSize" value="8000000"/>    
                                                  
		<!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/> 
    </bean>
</beans>